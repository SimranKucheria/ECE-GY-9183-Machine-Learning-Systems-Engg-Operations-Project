apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: promote-model
spec:
  entrypoint: promote-flow
  arguments:
    parameters:
    - name: source-environment
    - name: target-environment
    - name: model-version
    - name: endpoint-ip

  templates:
  - name: promote-flow
    steps:
      
      - - name: model-download
          template: download-model
          arguments:
            parameters:
            - name: source-environment
              value: "{{workflow.parameters.source-environment}}"
            - name: target-environment
              value: "{{workflow.parameters.target-environment}}"
            - name: model-version
              value: "{{workflow.parameters.model-version}}"
            - name: endpoint-ip
              value: "{{workflow.parameters.endpoint-ip}}"  

      - - name: retag-image
          template: skopeo-retag
          arguments:
            parameters:
            - name: source-environment
              value: "{{workflow.parameters.source-environment}}"
            - name: target-environment
              value: "{{workflow.parameters.target-environment}}"
            - name: model-version
              value: "{{workflow.parameters.model-version}}"
      - - name: deploy
          template: trigger-deploy
          arguments:
            parameters:
            - name: environment
              value: "{{workflow.parameters.target-environment}}"
            - name: model-version
              value: "{{workflow.parameters.model-version}}"
      - - name: update-mlflow-alias
          template: set-mlflow-alias
          arguments:
            parameters:
            - name: model-version
              value: "{{workflow.parameters.model-version}}"
            - name: alias
              value: "{{workflow.parameters.target-environment}}"

  - name: download-model
    inputs:
      parameters:
      - name: source-environment
      - name: target-environment
      - name: model-version
      - name: endpoint-ip
      - name: port
        value: "{{= inputs.parameters.target-environment == 'canary' ? 5200 : 5000 }}"
    script:
        image: alpine:3.18
        command: [sh]
        source: |

          MAX_RETRIES=5
          RETRY_DELAY=3
          i=1
          INSTALL_SUCCESS=0

          set +e  # allow manual error handling

          # Retry installation
          while [ $i -le $MAX_RETRIES ]; do
            echo "[INFO] Attempt $i to install curl and jq..." >&2
            apk update > /dev/null 2>&1
            apk add --no-cache curl jq > /dev/null 2>&1
            STATUS=$?
            if [ $STATUS -eq 0 ]; then
              echo "[INFO] Packages installed successfully." >&2
              INSTALL_SUCCESS=1
              break
            fi
            echo "[WARN] apk add failed (exit $STATUS). Retrying in $RETRY_DELAY seconds..." >&2
            sleep $RETRY_DELAY
            i=$((i + 1))
          done

          set -e  # return to fail-fast mode

          if [ $INSTALL_SUCCESS -ne 1 ]; then
            echo "[ERROR] Failed to install curl and jq after $MAX_RETRIES attempts." >&2
            exit 1
          fi

          # Trigger model training
          echo "[INFO] Triggering model deploying" >&2
          RESPONSE=$(curl -f -s -X POST http://{{inputs.parameters.endpoint-ip}}:{{port}}/update_VIT -d '{"model_version":{{inputs.parameters.model-version}} }')
          CURL_EXIT_CODE=$?

          echo "[INFO] Model Update response was: $RESPONSE" >&2


          if [ $CURL_EXIT_CODE -ne 0 ]; then
            echo "[ERROR] curl failed with code $CURL_EXIT_CODE" >&2
            exit $CURL_EXIT_CODE
          fi
  
  - name: skopeo-retag
    inputs:
      parameters:
      - name: source-environment
      - name: target-environment
      - name: model-version
    container:
      image: quay.io/skopeo/stable
      command: [sh, -c]
      args:
        - |
          skopeo copy \
            --src-tls-verify=false \
            --dest-tls-verify=false \
            docker://registry.kube-system.svc.cluster.local:5000/deeptrust-app:{{inputs.parameters.source-environment}}-1.0.{{inputs.parameters.model-version}} \
            docker://registry.kube-system.svc.cluster.local:5000/deeptrust-app:{{inputs.parameters.target-environment}}-1.0.{{inputs.parameters.model-version}}

  - name: set-mlflow-alias
    inputs:
      parameters:
      - name: model-version
      - name: alias
    script:
      image: python:3.11-slim
      command: [sh, -c]
      source: |
        pip install mlflow-skinny > /dev/null
        export MLFLOW_TRACKING_URI=http://mlflow.deeptrust-platform.svc.cluster.local:8000
        python -c "import mlflow; client = mlflow.tracking.MlflowClient(); client.set_registered_model_alias(name='VITDeeptrustModel', alias='{{inputs.parameters.alias}}', version='{{inputs.parameters.model-version}}')"

  - name: trigger-deploy
    inputs:
      parameters:
      - name: model-version
      - name: environment
    resource:
      action: create
      manifest: |
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow
        metadata:
          generateName: deploy-container-image-
        spec:
          workflowTemplateRef:
            name: deploy-container-image
          arguments:
            parameters:
            - name: environment
              value: "{{inputs.parameters.environment}}"
            - name: model-version
              value: "{{inputs.parameters.model-version}}"

       