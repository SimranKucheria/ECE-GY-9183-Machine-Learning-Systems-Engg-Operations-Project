---
- name: Deploy MLflow platform with FastAPI Floating IP
  hosts: node1
  become: yes
  vars:
    argocd_username: "admin"
    repo_path: "https://<TOKEN>@github.com/SimranKucheria/ECE-GY-9183-Machine-Learning-Systems-Engg-Operations-Project.git"
    app_name: "deeptrust-platform"
    app_path: "src/continuous-x/k8s/platform"
    minio_access_key: "your-access-key"

  tasks:
    - name: Get ArgoCD admin password from Kubernetes secret
      command: >
        kubectl get secret -n argocd argocd-initial-admin-secret \
        -o jsonpath="{.data.password}"
      register: argocd_password_base64

    - name: Decode ArgoCD admin password
      shell: echo {{ argocd_password_base64.stdout }} | base64 --decode
      register: argocd_password

    - name: Log in to ArgoCD
      command: >
        argocd login localhost --username {{ argocd_username }} \
        --password "{{ argocd_password.stdout }}" --grpc-web --port-forward --port-forward-namespace=argocd
      register: login_result
      changed_when: false

    - name: Detect external IP starting with 10.56
      set_fact:
        external_ip: "{{ ansible_all_ipv4_addresses | select('match', '^10\\.56\\..*') | list | first }}"

    - name: Check if ArgoCD application exists
      command: >
        argocd app get {{ app_name }} --port-forward --port-forward-namespace=argocd
      register: app_check
      failed_when: false
      changed_when: false

    - name: Create ArgoCD Helm application if it does not exist
      when: app_check.rc != 0
      command: >
        argocd app create {{ app_name }} \
        --repo {{ repo_path }} \
        --path {{ app_path }} \
        --dest-server https://kubernetes.default.svc \
        --dest-namespace "" \
        --helm-set-string minio.externalIP={{ external_ip }} \
        --helm-set-string mlflow.externalIP={{ external_ip }} \
        --helm-set-string grafana.externalIP={{ external_ip }} \
        --helm-set-string labelstudio.externalIP={{ external_ip }} \
        --helm-set-string flask.externalIP={{ external_ip }} \
        --helm-set-string prometheus.externalIP={{ external_ip }} \
        --helm-set-string fastapi.externalIP=$FIP \
        --port-forward --port-forward-namespace=argocd \
        --sync-policy automated --self-heal
      register: app_create
      environment:
            floating_ip: "A.B.C.D" 

    - name: Update ArgoCD Helm application if it exists
      when: app_check.rc == 0
      command: >
        argocd app set {{ app_name }} \
        --dest-namespace "" \
        --helm-set-string minio.externalIP={{ external_ip }} \
        --helm-set-string mlflow.externalIP={{ external_ip }} \
        --helm-set-string grafana.externalIP={{ external_ip }} \
        --helm-set-string labelstudio.externalIP={{ external_ip }} \
        --helm-set-string flask.externalIP={{ external_ip }} \
        --helm-set-string prometheus.externalIP={{ external_ip }} \
        --helm-set-string fastapi.externalIP=$FIP \
        --port-forward --port-forward-namespace=argocd
      register: app_update
      environment:
            floating_ip: "A.B.C.D" 
  